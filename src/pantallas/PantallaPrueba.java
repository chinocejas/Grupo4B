/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pantallas;

import Dao.DaoPregunta;
import Entidades.PreguntaCopia;
import Entidades.RespuestaCopia;
import ParaPantallaCompletar.EditorCelda;
import ParaPantallaCompletar.Renderizador;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.AbstractTableModel;

import Entidades.CuestionarioPreguntaCopia;

/**
 *
 * @author Usuario
 */
public class PantallaPrueba extends javax.swing.JFrame {

    /**
     * Creates new form PantallaPrueba
     */
    DaoPregunta daoPregunta = new DaoPregunta(); 

    
    
    public PantallaPrueba() {
        initComponents();
        setSize(1024, 768);
        setLocationRelativeTo(null);
            
        ModeloPersonalizado modeloTabla =  new ModeloPersonalizado(01);
        jTable1.setModel(modeloTabla); //Aca seteo un modelo personalizado de jtable para que pueda cargar cosas dinamicamente
        jTable1.getColumnModel().getColumn(0).setCellRenderer(new Renderizador());
        jTable1.getColumnModel().getColumn(0).setCellEditor(new EditorCelda()); //Aca estoy setenado en la columna 0 con los modelos personalizados del jcheckbox
        
        
        
    }

    
    
    
    public void mostrarPreguntas(){
        
        nombrePregunta.setText(daoPregunta.findPreguntaCopia(01).getNombrePregunta());
    }
    
    
    public class ModeloPersonalizado extends AbstractTableModel{
       
        //Aca lo que hago es definir una lista CuestionarioPreguntaCopia
        public List<RespuestaCopia> listaDeRespuestas = null;
        private String[] columnas = {"", "Respuestas"}; 
        private boolean [] editables={true,false}; //digo que columnas de mi modelo personalizado son editables
        public  DaoPregunta dao = new DaoPregunta();  
        

        
        public ModeloPersonalizado(int id_pregunta){

            PreguntaCopia pc = daoPregunta.findPreguntaCopia(id_pregunta);
            List<CuestionarioPreguntaCopia> aux = new ArrayList();
            //traer preguntas de este cuestionario
            //Traer todas las preguntas
            
   
        }

   
        @Override
        public int getRowCount(){
            
            return listaDeRespuestas.size();
        }
        
        @Override
        public int getColumnCount(){
            return columnas.length;
        }
         
        @Override
        public boolean isCellEditable (int rowIndex, int columnIndez){
            
            return editables[columnIndez];
            
        }
                
        
        @Override //en este metodo seteo el balor correspondiente a cada columna
        public Object getValueAt(int rowIndex, int columnIndez){
            switch(columnIndez){
                case 0:{
                    return false;
                }
                case 1: {
                    
                    return  listaDeRespuestas.get(rowIndex).getRespuesta(); //esto trae preguntas, lo que tiene q traer son las respuestas, por cada pregunta
                   
                }
                default: return null;
            }
        }
    }        
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        nombrePregunta = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        nombrePregunta.setText("jTextField1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(nombrePregunta, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(107, 107, 107))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(nombrePregunta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PantallaPrueba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PantallaPrueba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PantallaPrueba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PantallaPrueba.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PantallaPrueba().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField nombrePregunta;
    // End of variables declaration//GEN-END:variables
}
