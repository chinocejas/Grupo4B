/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pantallas;

import Entidades.Candidato;
import Entidades.Puesto;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.List;
import Gestores.GestorCandidato;
import Gestores.GestorPuesto;
import Gestores.GestorValidacionesPantalla;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JTable;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author pc
 */
public class GestionDeEvaluarCandidato extends javax.swing.JFrame {

    CustomTableModel modeloTabla = new CustomTableModel();
    CustomTableModel modeloTablaSeleccionados = new CustomTableModel();
    
    //pido la instancia de gestor de candidatos
    GestorCandidato gestorCandidato = GestorCandidato.getInstance();
    //pido la instancia de gestor de puestos
    GestorPuesto gestorPuesto = GestorPuesto.getInstance();

    //pido la instancia de gestor de validaciones de pantalla
    GestorValidacionesPantalla gestorValidacionesPantalla = GestorValidacionesPantalla.getInstance();

    //Candidato candidatoAux;


    public GestionDeEvaluarCandidato() {
        initComponents();
        setSize(1024, 768);
        setLocationRelativeTo(null);
        tablaBusqueda.setModel(modeloTabla);
        tablaBusqueda.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tablaSeleccionados.setModel(modeloTablaSeleccionados);
        tablaSeleccionados.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        
    }

    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("Imagenes/BS_ultimate2.png"));
        return retValue;
    }
    
    private void limpiarTabla(JTable tabla, GestionDeEvaluarCandidato.CustomTableModel modeloTabla){
       for (int i = 0; i < tabla.getRowCount(); i++) {
           modeloTabla.eliminarCandidato(i);
           i-=1;
       }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        campoTexto = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnRemove = new javax.swing.JButton();
        btnAddAll = new javax.swing.JButton();
        btnRemoveAll = new javax.swing.JButton();
        apellido = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtApellido = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtCodigo = new javax.swing.JLabel();
        btnSiguiente = new javax.swing.JButton();
        btnVolver = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaBusqueda = new javax.swing.JTable();
        txtId = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        txtMensajeBusqueda = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tablaSeleccionados = new javax.swing.JTable();
        fondoImagen = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setMaximumSize(new java.awt.Dimension(1024, 768));
        jPanel1.setMinimumSize(new java.awt.Dimension(1024, 768));
        jPanel1.setOpaque(false);
        jPanel1.setPreferredSize(new java.awt.Dimension(1024, 768));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 44)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(219, 219, 219));
        jLabel1.setText("Evaluar Candidatos");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Resultados de BÃºsqueda");

        campoTexto.setFont(new java.awt.Font("Arial", 0, 19)); // NOI18N
        campoTexto.setForeground(new java.awt.Color(255, 255, 255));
        campoTexto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        btnAdd.setBackground(new java.awt.Color(0, 51, 102));
        btnAdd.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(204, 204, 204));
        btnAdd.setText(">>");
        btnAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        btnAdd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnAddKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Candidatos a evaluar");

        btnRemove.setBackground(new java.awt.Color(0, 51, 102));
        btnRemove.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        btnRemove.setForeground(new java.awt.Color(204, 204, 204));
        btnRemove.setText("<<");
        btnRemove.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });
        btnRemove.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnRemoveKeyPressed(evt);
            }
        });

        btnAddAll.setBackground(new java.awt.Color(0, 51, 102));
        btnAddAll.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        btnAddAll.setForeground(new java.awt.Color(204, 204, 204));
        btnAddAll.setText("Add All");
        btnAddAll.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAllActionPerformed(evt);
            }
        });
        btnAddAll.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnAddAllKeyPressed(evt);
            }
        });

        btnRemoveAll.setBackground(new java.awt.Color(0, 51, 102));
        btnRemoveAll.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        btnRemoveAll.setForeground(new java.awt.Color(204, 204, 204));
        btnRemoveAll.setText("Remove All");
        btnRemoveAll.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRemoveAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveAllActionPerformed(evt);
            }
        });
        btnRemoveAll.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnRemoveAllKeyPressed(evt);
            }
        });

        apellido.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        apellido.setForeground(new java.awt.Color(255, 255, 255));
        apellido.setText("Apellido:");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Nombre:");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Numero ID:");

        txtApellido.setBackground(new java.awt.Color(0, 51, 102));
        txtApellido.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        txtApellido.setForeground(new java.awt.Color(255, 255, 255));
        txtApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtApellidoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidoKeyTyped(evt);
            }
        });

        txtNombre.setBackground(new java.awt.Color(0, 51, 102));
        txtNombre.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        txtNombre.setForeground(new java.awt.Color(255, 255, 255));
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });

        txtCodigo.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        txtCodigo.setForeground(new java.awt.Color(255, 255, 255));

        btnSiguiente.setBackground(new java.awt.Color(0, 51, 102));
        btnSiguiente.setFont(new java.awt.Font("Arial", 1, 22)); // NOI18N
        btnSiguiente.setForeground(new java.awt.Color(255, 255, 255));
        btnSiguiente.setText("Siguiente");
        btnSiguiente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSiguiente.setPreferredSize(new java.awt.Dimension(137, 41));
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });
        btnSiguiente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnSiguienteKeyPressed(evt);
            }
        });

        btnVolver.setBackground(new java.awt.Color(0, 51, 102));
        btnVolver.setFont(new java.awt.Font("Arial", 1, 22)); // NOI18N
        btnVolver.setForeground(new java.awt.Color(255, 255, 255));
        btnVolver.setText("Volver");
        btnVolver.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });
        btnVolver.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnVolverKeyPressed(evt);
            }
        });

        tablaBusqueda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"no se muestran los cambios hechos aca"}
            },
            new String [] {
                "no se usa este diseÃ±o"
            }
        ));
        tablaBusqueda.setColumnSelectionAllowed(true);
        tablaBusqueda.getTableHeader().setReorderingAllowed(false);
        tablaBusqueda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaBusquedaMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tablaBusqueda);
        tablaBusqueda.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tablaBusqueda.getColumnModel().getColumnCount() > 0) {
            tablaBusqueda.getColumnModel().getColumn(0).setPreferredWidth(190);
        }

        txtId.setBackground(new java.awt.Color(0, 51, 102));
        txtId.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        txtId.setForeground(new java.awt.Color(255, 255, 255));
        txtId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdKeyTyped(evt);
            }
        });

        btnBuscar.setBackground(new java.awt.Color(0, 51, 102));
        btnBuscar.setFont(new java.awt.Font("Arial", 1, 22)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscar.setText("Buscar");
        btnBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        btnBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnBuscarKeyPressed(evt);
            }
        });

        txtMensajeBusqueda.setForeground(new java.awt.Color(255, 255, 255));

        tablaSeleccionados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"no se muestran los cambios hechos aca"}
            },
            new String [] {
                "no se usa este diseÃ±o"
            }
        ));
        tablaSeleccionados.getTableHeader().setReorderingAllowed(false);
        tablaSeleccionados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaSeleccionadosMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tablaSeleccionados);
        tablaSeleccionados.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tablaSeleccionados.getColumnModel().getColumnCount() > 0) {
            tablaSeleccionados.getColumnModel().getColumn(0).setPreferredWidth(190);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(258, 258, 258)
                                .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addComponent(apellido, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(246, 246, 246)
                                .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(237, 237, 237)
                                .addComponent(btnSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(70, 70, 70)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtMensajeBusqueda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(124, 124, 124)
                                .addComponent(jLabel2)
                                .addGap(149, 149, 149))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(31, 31, 31)
                                        .addComponent(btnAdd))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(31, 31, 31)
                                        .addComponent(btnRemove))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addComponent(btnAddAll, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnRemoveAll))
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(97, 97, 97))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(330, 330, 330)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(campoTexto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(47, 47, 47))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(txtCodigo)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(apellido)
                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel7))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMensajeBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAdd)
                        .addGap(9, 9, 9)
                        .addComponent(btnRemove)
                        .addGap(9, 9, 9)
                        .addComponent(btnAddAll)
                        .addGap(9, 9, 9)
                        .addComponent(btnRemoveAll)
                        .addGap(65, 65, 65)))
                .addComponent(campoTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(94, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        fondoImagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Abstracto Azul_1024.jpg"))); // NOI18N
        fondoImagen.setText("jLabel9");
        fondoImagen.setPreferredSize(new java.awt.Dimension(1024, 768));
        getContentPane().add(fondoImagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tablaBusquedaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaBusquedaMouseClicked

    }//GEN-LAST:event_tablaBusquedaMouseClicked

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        GestionCandidatos obj = new GestionCandidatos();
        obj.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
     /*   //Lista de cand con cuestionarios activos o en proceso
        //ArrayList<Candidato> conCuestionarioActPro = new ArrayList<Candidato>();
        //conCuestionarioActPro = gestorCandidato.findCuestionariosActPro(modeloTablaSeleccionados.getListaCandidatos());
        
       // if(conCuestionarioActPro.isEmpty()){
            List<Puesto> puestos = gestorPuesto.buscarTodosPuestos();
            EvaluarCandidatoFunciones obj = new EvaluarCandidatoFunciones(puestos);
            obj.setVisible(true);
            dispose();
        //}else {
            /*COLOREAR ELEMENTOS QUE TIENEN CUEST ACTIVO O EN PROCESO*/
        //};
        
         
        
        //Lista de cand con cuestionarios activos o en proceso
        List<Candidato> conCuestionarioActPro = new ArrayList<Candidato>();
        conCuestionarioActPro = gestorCandidato.findCuestionariosActPro(modeloTablaSeleccionados.getListaCandidatos());
        
        if(conCuestionarioActPro.isEmpty()){
            List<Puesto> puestos = gestorPuesto.buscarTodosPuestos();
            EvaluarCandidatoFunciones obj = new EvaluarCandidatoFunciones(puestos);
            obj.setVisible(true);
            dispose();
        }else {
            campoTexto.setText("Los candidatos resaltados poseen cuestionarios activos o en proceso y no pueden ser evaluados nuevamente");
            FormatoTabla ft = new FormatoTabla(conCuestionarioActPro);
            tablaSeleccionados.setDefaultRenderer (Object.class, ft);
            modeloTablaSeleccionados.fireTableDataChanged();
        };
        
        
    }//GEN-LAST:event_btnSiguienteActionPerformed

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
        gestorValidacionesPantalla.keyTypedTextoYEspacios(txtNombre, evt);
    }//GEN-LAST:event_txtNombreKeyTyped

    private void txtNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyReleased
        gestorValidacionesPantalla.keyReleased(txtNombre);
    }//GEN-LAST:event_txtNombreKeyReleased

    private void txtApellidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoKeyTyped
        gestorValidacionesPantalla.keyTypedTextoYEspacios(txtApellido, evt);
    }//GEN-LAST:event_txtApellidoKeyTyped

    private void txtApellidoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidoKeyReleased
        gestorValidacionesPantalla.keyReleased(txtApellido);
    }//GEN-LAST:event_txtApellidoKeyReleased

    private void btnRemoveAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveAllActionPerformed
       
        while (modeloTablaSeleccionados.getRowCount() != 0) { //se va a ejecutar mientras haya alguna fila en la tabla
            modeloTabla.addCandidato(modeloTablaSeleccionados.getCandidato(0));
            modeloTablaSeleccionados.eliminarCandidato(0);
        }
    }//GEN-LAST:event_btnRemoveAllActionPerformed

    private void btnAddAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAllActionPerformed

        while (modeloTabla.getRowCount() != 0) {
            Candidato cand = modeloTabla.getCandidato(0);
            modeloTablaSeleccionados.addCandidato(cand);
            modeloTabla.eliminarCandidato(0);
        }

    }//GEN-LAST:event_btnAddAllActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        
            if ((tablaSeleccionados.getSelectedRow() == -1)) {
                campoTexto.setText("Seleccione un elemento antes de presionar el boton");
            } else {
                campoTexto.setText("");
                
                int row = tablaSeleccionados.getSelectedRow();
                Candidato cand = modeloTablaSeleccionados.getCandidato(row);
                modeloTabla.addCandidato(cand);
                modeloTablaSeleccionados.eliminarCandidato(row);
            }

    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
    
        if (tablaBusqueda.getSelectedRow() != -1 || tablaBusqueda.getComponentCount() == 0) {
            campoTexto.setText("");
            Candidato candidato = modeloTabla.getCandidato(tablaBusqueda.getSelectedRow());
            modeloTablaSeleccionados.addCandidato(candidato);
            modeloTabla.eliminarCandidato(tablaBusqueda.getSelectedRow());
        } else {
            campoTexto.setText("Seleccione un elemento antes de presionar el boton");
        }

    }//GEN-LAST:event_btnAddActionPerformed

    private void txtIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdKeyTyped
        gestorValidacionesPantalla.keyTypedSoloNumeros(txtId, evt);
    }//GEN-LAST:event_txtIdKeyTyped

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
    
        limpiarTabla(tablaBusqueda,modeloTabla);    //se limpia la tabla para que al hacer busquedas consecutivas se borren los resultados anteriores
        
        txtMensajeBusqueda.setText("");
        //obtengo los datos de pantalla
        String apellido = txtApellido.getText();    
        String nombre = txtNombre.getText();
        String id = txtId.getText();
  
        if("".equals(apellido) && "".equals(nombre) && "".equals(id)){ //no completo al menos un criterio de busqueda
            
            GestorCandidato gestorCandidato = GestorCandidato.getInstance();     //se pide la instancia de GestorCandidato
            gestorCandidato.buscarCandidato(modeloTabla);  //busca en la BD y completa la tabla que es pasada por parametro con los resultados 
        }
        else{
        GestorCandidato gestorCandidato = GestorCandidato.getInstance();     //se pide la instancia de GestorCandidato

        gestorCandidato.buscarCandidato(modeloTabla, apellido, nombre, id);  //busca en la BD y completa la tabla que es pasada por parametro con los resultados
        }
        
        if (modeloTabla.data.isEmpty()) {
            txtMensajeBusqueda.setText("La bÃºsqueda no ha arrojado resultados");
        }
        
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void tablaSeleccionadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaSeleccionadosMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tablaSeleccionadosMouseClicked

    private void btnBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnBuscarKeyPressed
       if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnBuscarActionPerformed(null);
        }
    }//GEN-LAST:event_btnBuscarKeyPressed

    private void btnVolverKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnVolverKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnVolverActionPerformed(null);
        }
    }//GEN-LAST:event_btnVolverKeyPressed

    private void btnSiguienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSiguienteKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnSiguienteActionPerformed(null);
        }
    }//GEN-LAST:event_btnSiguienteKeyPressed

    private void btnAddKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAddKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnAddActionPerformed(null);
        }
    }//GEN-LAST:event_btnAddKeyPressed

    private void btnRemoveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnRemoveKeyPressed
       if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnRemoveActionPerformed(null);
        }
    }//GEN-LAST:event_btnRemoveKeyPressed

    private void btnAddAllKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAddAllKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnAddAllActionPerformed(null);
        }
    }//GEN-LAST:event_btnAddAllKeyPressed

    private void btnRemoveAllKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnRemoveAllKeyPressed
      if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnRemoveAllActionPerformed(null);
        }
    }//GEN-LAST:event_btnRemoveAllKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionDeEvaluarCandidato.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionDeEvaluarCandidato.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionDeEvaluarCandidato.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionDeEvaluarCandidato.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionDeEvaluarCandidato().setVisible(true);
            }
        });
    }

    //http://jcaballero-progravan1.blogspot.com.ar/2011/03/jtable.html
    //http://docs.oracle.com/javase/tutorial/uiswing/components/table.html#data
    public class CustomTableModel extends AbstractTableModel {

        private ArrayList<Candidato> data = new ArrayList<Candidato>();
        private int numColumns = 3; //cant de columnas con la que se crea la tabla
        private String columnNames[] = {"Nombre", "Apellido", "NÃºmero ID"};
        // private Class classes[]={String.class ,String.class}; //tipo de las columnas
        private boolean editable[] = {false, false, false};

        @Override
        public int getRowCount() {
            return data.size();
        }

        @Override
        public int getColumnCount() { //construye la cantidad de columnas que se retorna

            return numColumns;
        }

        @Override
        public String getColumnName(int col) {
            return columnNames[col];
        }

        @Override
        public Class getColumnClass(int col) {
            //return classes[col];
            return String.class; //no cambiar a int u otra cosa porque pierde la propiedad de editable
        }

        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return columnIndex == 0 ? false : true;
        }

        public Candidato getCandidato(int fila) {
            return (Candidato)data.get(fila);
        }
        public Candidato getCandidato2(int fila) {
            return (Candidato)data.get(fila);
        }

        public List<Candidato> getListaCandidatos() {
            return data;
        }


        @Override
        //este metodo muestra por pantalla los nombres pero en realidad se esta manejando una lista con Competencias por detras
        public Object getValueAt(int row, int col) {

            Object retorno=null;
            Candidato c = (Candidato) data.get(row);
            switch (col) {
                case 0:
                    retorno = c.getNombre();
                    break;
                case 1:
                    retorno = c.getApellido();
                    break;
                case 2:
                    retorno = c.getIdCandidato();
                    break;
            }
            return retorno;
        }

        public void addCandidato(Candidato candidato) {
            data.add(candidato);      
            fireTableDataChanged();
        }

        private void eliminarCandidato(int row) {
            data.remove(row);
            fireTableDataChanged();
        }

    }
    
   // http://www.jc-mouse.net/java/jtable-de-colores-problema-resuelto
    public class FormatoTabla extends DefaultTableCellRenderer {

        private List<Candidato> conCuestionarioActPro;

        public FormatoTabla(List<Candidato> conCuestionarioActPro) {
            this.conCuestionarioActPro = conCuestionarioActPro;
        }

        @Override
        public Component getTableCellRendererComponent(
                JTable table,
                Object value,
                boolean selected,
                boolean focused,
                int row,
                int column) {
            setBackground(Color.white);//color de fondo
            table.setForeground(Color.black);//color de texto

            for (int i = 0; i < conCuestionarioActPro.size(); i++) 
            {
                //si el valor de la tabla en cualquier fila y la columna 2 (ID CANDIDATO) 
                //es igual al id de algun candidato de la lista se resalta
                if (table.getValueAt(row, 2).equals(conCuestionarioActPro.get(i).getIdCandidato())) {
                    setBackground(Color.MAGENTA);
                }
            }

            super.getTableCellRendererComponent(table, value, selected, focused, row, column);
            return this;
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel apellido;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAddAll;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnRemoveAll;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel campoTexto;
    private javax.swing.JLabel fondoImagen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable tablaBusqueda;
    private javax.swing.JTable tablaSeleccionados;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JLabel txtCodigo;
    private javax.swing.JTextField txtId;
    private javax.swing.JLabel txtMensajeBusqueda;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
